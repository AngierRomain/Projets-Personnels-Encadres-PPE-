<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>